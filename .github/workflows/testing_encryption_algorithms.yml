name: Start tests

on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies and tools
        run: |
          python3 -m venv venv
          ./venv/bin/pip install -r requirements.txt
          ./venv/bin/pip install pytest-cov coveralls

      - name: Run tests with pytest and generate coverage report
        run: |
          ./venv/bin/pytest --cov=CryptographerStr --cov-report=xml:coverage.xml ./tests/

      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  merge:
    needs: test
    if: ${{ needs.test.result == 'success' }}
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch all branches
        run: git fetch origin

      - name: Checkout master branch
        run: |
          git checkout master
          git pull origin master

      - name: Merge dev into master
        run: |
          git fetch origin dev:dev 
          git merge --no-ff --allow-unrelated-histories --strategy-option theirs dev
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  send_reports:
    needs: merge
    if: ${{ needs.merge.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Download coverage.xml artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./

      - name: Upload coverage report to Coveralls
        run: ./venv/bin/coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: Display coverage report
        run: cat coverage.xml

      - name: Rewrite coverage report
        run: sed -i 's|<source>/home/runner/work/Cryptographer/Cryptographer/CryptographerStr</source>|<source>CryptographerStr</source>|g' coverage.xml

      - name: Display rewritten coverage report
        run: cat coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
